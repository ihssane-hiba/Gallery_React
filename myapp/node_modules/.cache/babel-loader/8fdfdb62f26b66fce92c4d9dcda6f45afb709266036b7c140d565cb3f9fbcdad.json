{"ast":null,"code":"var _jsxFileName = \"D:\\\\Gallery_React\\\\myapp\\\\src\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]); // CORRECTION: Initialisation avec un tableau vide\n\n  const rechercherImages = async () => {\n    const API_KEY = '47856087-486173b4ba450363678f546c5'; // Remplacez par votre clé API réelle\n    const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo`;\n    try {\n      const response = await axios.get(URL);\n      setImages(response.data.hits || []); // Ajout d'une vérification pour éviter les erreurs\n    } catch (error) {\n      console.error('Erreur lors de la récupération des images :', error);\n      setImages([]); // Réinitialiser en cas d'erreur\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Rechercher une image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rechercherImages,\n      children: \"Rechercher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: images.length > 0 ?\n      // Vérification s'il y a des images\n      images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.webformatURL,\n        alt: image.tags\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune image trouv\\xE9e.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Gallery, \"iAK12LadF4i/9XXIMn5w3koqEmo=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Gallery","_s","query","setQuery","images","setImages","rechercherImages","API_KEY","URL","response","get","data","hits","error","console","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","image","src","webformatURL","alt","tags","id","_c","$RefreshReg$"],"sources":["D:/Gallery_React/myapp/src/Gallery.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Gallery = () =>  {\r\n    const [query, setQuery] = useState('');\r\n    const [images, setImages] = useState([]); // CORRECTION: Initialisation avec un tableau vide\r\n\r\n    const rechercherImages = async () => {\r\n        const API_KEY = '47856087-486173b4ba450363678f546c5'; // Remplacez par votre clé API réelle\r\n        const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo`;\r\n\r\n        try {\r\n            const response = await axios.get(URL);\r\n            setImages(response.data.hits || []); // Ajout d'une vérification pour éviter les erreurs\r\n        } catch (error) {\r\n            console.error('Erreur lors de la récupération des images :', error);\r\n            setImages([]); // Réinitialiser en cas d'erreur\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n          <input \r\n            type=\"text\" \r\n            value={query} \r\n            onChange={(e) => setQuery(e.target.value)} \r\n            placeholder=\"Rechercher une image...\"\r\n          />\r\n          <button onClick={rechercherImages}>Rechercher</button>\r\n    \r\n          <div>\r\n            {images.length > 0 ? ( // Vérification s'il y a des images\r\n              images.map((image) => (\r\n                <img key={image.id} src={image.webformatURL} alt={image.tags} />\r\n              ))\r\n            ) : (\r\n              <p>Aucune image trouvée.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAO;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,OAAO,GAAG,oCAAoC,CAAC,CAAC;IACtD,MAAMC,GAAG,GAAG,gCAAgCD,OAAO,MAAML,KAAK,mBAAmB;IAEjF,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACF,GAAG,CAAC;MACrCH,SAAS,CAACI,QAAQ,CAACE,IAAI,CAACC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACnER,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,KAAM;MACbgB,QAAQ,EAAGC,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACF1B,OAAA;MAAQ2B,OAAO,EAAEpB,gBAAiB;MAAAS,QAAA,EAAC;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtD1B,OAAA;MAAAgB,QAAA,EACGX,MAAM,CAACuB,MAAM,GAAG,CAAC;MAAK;MACrBvB,MAAM,CAACwB,GAAG,CAAEC,KAAK,iBACf9B,OAAA;QAAoB+B,GAAG,EAAED,KAAK,CAACE,YAAa;QAACC,GAAG,EAAEH,KAAK,CAACI;MAAK,GAAnDJ,KAAK,CAACK,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CAChE,CAAC,gBAEF1B,OAAA;QAAAgB,QAAA,EAAG;MAAqB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtCID,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}